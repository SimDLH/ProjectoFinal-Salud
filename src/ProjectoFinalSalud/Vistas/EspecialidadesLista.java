
package ProjectoFinalSalud.Vistas;

import ProjectoFinalSalud.AccesoDeDatos.EspecialidadData;
import ProjectoFinalSalud.AccesoDeDatos.PrestadorData;
import ProjectoFinalSalud.Entidades.Especialidad;
import ProjectoFinalSalud.Entidades.Prestador;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

public class EspecialidadesLista extends javax.swing.JInternalFrame {
    
    DefaultTableModel modelo = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int colum) {
            return false;
        }
    };
    
    EspecialidadData ed = new EspecialidadData();
    PrestadorData pd = new PrestadorData();
     
    public EspecialidadesLista() {
        
        initComponents();
        armarCabesera();
        cargarComboBox();
        resizeColumnWidth(tablaEspListaProf);
        tablaEspListaProf.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGradEspLista = new keeptoo.KGradientPanel();
        etiquetaEspListaProfXEsp = new javax.swing.JLabel();
        botonAtrasProfConsul = new javax.swing.JButton();
        comboBoxEspEsp = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEspListaProf = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(975, 575));

        panelGradEspLista.setBackground(new java.awt.Color(255, 255, 255));
        panelGradEspLista.setkEndColor(new java.awt.Color(0, 153, 255));
        panelGradEspLista.setkStartColor(new java.awt.Color(0, 153, 0));
        panelGradEspLista.setPreferredSize(new java.awt.Dimension(975, 575));

        etiquetaEspListaProfXEsp.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaEspListaProfXEsp.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        etiquetaEspListaProfXEsp.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaEspListaProfXEsp.setText("Lista De Profecionales Por Especialidad");

        botonAtrasProfConsul.setBackground(new java.awt.Color(255, 255, 255));
        botonAtrasProfConsul.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        botonAtrasProfConsul.setForeground(new java.awt.Color(255, 255, 255));
        botonAtrasProfConsul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesDelProyecto/BotonRetroceso.png"))); // NOI18N
        botonAtrasProfConsul.setText("Atrás");
        botonAtrasProfConsul.setBorderPainted(false);
        botonAtrasProfConsul.setContentAreaFilled(false);
        botonAtrasProfConsul.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonAtrasProfConsul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasProfConsulActionPerformed(evt);
            }
        });

        comboBoxEspEsp.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        comboBoxEspEsp.setForeground(new java.awt.Color(255, 255, 255));
        comboBoxEspEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxEspEspActionPerformed(evt);
            }
        });

        tablaEspListaProf.setBackground(panelGradEspLista.getkStartColor());
        tablaEspListaProf.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tablaEspListaProf.setForeground(new java.awt.Color(255, 255, 255));
        tablaEspListaProf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaEspListaProf);

        javax.swing.GroupLayout panelGradEspListaLayout = new javax.swing.GroupLayout(panelGradEspLista);
        panelGradEspLista.setLayout(panelGradEspListaLayout);
        panelGradEspListaLayout.setHorizontalGroup(
            panelGradEspListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGradEspListaLayout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addGroup(panelGradEspListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradEspListaLayout.createSequentialGroup()
                        .addComponent(etiquetaEspListaProfXEsp)
                        .addGap(135, 135, 135)
                        .addComponent(botonAtrasProfConsul)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradEspListaLayout.createSequentialGroup()
                        .addGroup(panelGradEspListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboBoxEspEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(152, 152, 152))))
        );
        panelGradEspListaLayout.setVerticalGroup(
            panelGradEspListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGradEspListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGradEspListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(etiquetaEspListaProfXEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAtrasProfConsul))
                .addGap(44, 44, 44)
                .addComponent(comboBoxEspEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(226, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGradEspLista, javax.swing.GroupLayout.DEFAULT_SIZE, 959, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGradEspLista, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
        );

        setBounds(0, 0, 975, 575);
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxEspEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxEspEspActionPerformed
        limpiarTabla();
        Especialidad es = (Especialidad)comboBoxEspEsp.getSelectedItem();
        cargarTabla(pd.listarPrestadorPorEspecialidad(es.getIdEspecialidad()));
    }//GEN-LAST:event_comboBoxEspEspActionPerformed

    private void botonAtrasProfConsulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasProfConsulActionPerformed
        dispose();
    }//GEN-LAST:event_botonAtrasProfConsulActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAtrasProfConsul;
    private javax.swing.JComboBox<Especialidad> comboBoxEspEsp;
    private javax.swing.JLabel etiquetaEspListaProfXEsp;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel panelGradEspLista;
    private javax.swing.JTable tablaEspListaProf;
    // End of variables declaration//GEN-END:variables

    private void armarCabesera() {
        modelo.addColumn("Nombre");
        modelo.addColumn("DNI");
        modelo.addColumn("Domicilio");
        modelo.addColumn("Número de Teléfono");
        tablaEspListaProf.setModel(modelo);
    }
    
    private void cargarComboBox() {
        for(Especialidad es:ed.listarEspecialidad()){
            comboBoxEspEsp.addItem(es);
        }
    }
    
    private void limpiarTabla() {
        int fila = modelo.getRowCount();
        for(int i = fila - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }
    
    private void cargarTabla(ArrayList<Prestador> prestadores) {
        
        for (Prestador p:prestadores) {
            modelo.addRow(new Object[]{p.getNombre(),p.getDni(),p.getDomicilio(),p.getTelefono()});
        }
    }
    
    private void resizeColumnWidth(JTable tablaEspListaProf) {

    TableColumnModel columnModel = tablaEspListaProf.getColumnModel();
        for (int column = 0; column < tablaEspListaProf.getColumnCount(); column++) {
            int width = 150;
            for (int row = 0; row < tablaEspListaProf.getRowCount(); row++) {
                TableCellRenderer renderer = tablaEspListaProf.getCellRenderer(row, column);
                Component comp = tablaEspListaProf.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1, width);
            }
        if (width > 300) {
            width = 300;
        }
        columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
}