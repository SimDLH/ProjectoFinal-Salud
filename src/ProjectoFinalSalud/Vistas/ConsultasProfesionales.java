
package ProjectoFinalSalud.Vistas;

import ProjectoFinalSalud.AccesoDeDatos.PrestadorData;
import ProjectoFinalSalud.Entidades.Prestador;
import java.awt.Component;
import java.awt.Cursor;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

public class ConsultasProfesionales extends javax.swing.JInternalFrame {

    DefaultTableModel modelo = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int colum) {
            return false;
        }
    };
    
    PrestadorData presData = new PrestadorData();
    
    public ConsultasProfesionales() {
        
        initComponents();
        armarTablaProfesionales();
        cargarTablaProfesionales();
        resizeColumnWidth(tablaConsulProf);
        tablaConsulProf.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);
    }
    
    private void armarTablaProfesionales(){
        
        modelo.addColumn("Nombre");
        modelo.addColumn("Domicilio");
        modelo.addColumn("Teléfono");
        tablaConsulProf.setModel(modelo);
        }
        
    private void cargarTablaProfesionales(){
        for(Prestador pres:presData.listarPrestador()){
            modelo.addRow(new Object[]{pres.getNombre(),pres.getDomicilio(),pres.getTelefono()});
        }
    }
    
    private void resizeColumnWidth(JTable tablaProf) {

    TableColumnModel columnModel = tablaProf.getColumnModel();
        for (int column = 0; column < tablaProf.getColumnCount(); column++) {
            int width = 150;
            for (int row = 0; row < tablaProf.getRowCount(); row++) {
                TableCellRenderer renderer = tablaProf.getCellRenderer(row, column);
                Component comp = tablaProf.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1, width);
            }
        if (width > 300) {
            width = 300;
        }
        columnModel.getColumn(column).setPreferredWidth(width);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        panelGradConsulProf = new keeptoo.KGradientPanel();
        etiquetaConsulProf = new javax.swing.JLabel();
        botonAtrasConsulProf = new javax.swing.JButton();
        panelScrollTabla = new javax.swing.JScrollPane();
        tablaConsulProf = new javax.swing.JTable();

        jButton1.setText("jButton1");

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(975, 575));

        panelGradConsulProf.setBackground(new java.awt.Color(255, 255, 255));
        panelGradConsulProf.setkEndColor(new java.awt.Color(0, 153, 255));
        panelGradConsulProf.setkStartColor(new java.awt.Color(0, 153, 0));
        panelGradConsulProf.setPreferredSize(new java.awt.Dimension(975, 575));

        etiquetaConsulProf.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaConsulProf.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        etiquetaConsulProf.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaConsulProf.setText("Consultar Profesionales");

        botonAtrasConsulProf.setBackground(new java.awt.Color(255, 255, 255));
        botonAtrasConsulProf.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        botonAtrasConsulProf.setForeground(new java.awt.Color(255, 255, 255));
        botonAtrasConsulProf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesDelProyecto/BotonRetroceso.png"))); // NOI18N
        botonAtrasConsulProf.setText("Atrás");
        botonAtrasConsulProf.setBorderPainted(false);
        botonAtrasConsulProf.setContentAreaFilled(false);
        botonAtrasConsulProf.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonAtrasConsulProf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonAtrasConsulProfMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonAtrasConsulProfMouseExited(evt);
            }
        });
        botonAtrasConsulProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasConsulProfActionPerformed(evt);
            }
        });

        tablaConsulProf.setBackground(panelGradConsulProf.getkStartColor());
        tablaConsulProf.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        tablaConsulProf.setForeground(new java.awt.Color(255, 255, 255));
        tablaConsulProf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaConsulProf.getTableHeader().setReorderingAllowed(false);
        panelScrollTabla.setViewportView(tablaConsulProf);
        if (tablaConsulProf.getColumnModel().getColumnCount() > 0) {
            tablaConsulProf.getColumnModel().getColumn(0).setResizable(false);
            tablaConsulProf.getColumnModel().getColumn(1).setResizable(false);
            tablaConsulProf.getColumnModel().getColumn(2).setResizable(false);
            tablaConsulProf.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout panelGradConsulProfLayout = new javax.swing.GroupLayout(panelGradConsulProf);
        panelGradConsulProf.setLayout(panelGradConsulProfLayout);
        panelGradConsulProfLayout.setHorizontalGroup(
            panelGradConsulProfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGradConsulProfLayout.createSequentialGroup()
                .addContainerGap(226, Short.MAX_VALUE)
                .addGroup(panelGradConsulProfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradConsulProfLayout.createSequentialGroup()
                        .addComponent(etiquetaConsulProf)
                        .addGap(213, 213, 213)
                        .addComponent(botonAtrasConsulProf)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradConsulProfLayout.createSequentialGroup()
                        .addComponent(panelScrollTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(223, 223, 223))))
        );
        panelGradConsulProfLayout.setVerticalGroup(
            panelGradConsulProfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGradConsulProfLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGradConsulProfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(etiquetaConsulProf)
                    .addComponent(botonAtrasConsulProf))
                .addGap(69, 69, 69)
                .addComponent(panelScrollTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGradConsulProf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 959, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGradConsulProf, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
        );

        setBounds(0, 0, 975, 575);
    }// </editor-fold>//GEN-END:initComponents

    private void botonAtrasConsulProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasConsulProfActionPerformed
        dispose();
    }//GEN-LAST:event_botonAtrasConsulProfActionPerformed

    private void botonAtrasConsulProfMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAtrasConsulProfMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_botonAtrasConsulProfMouseEntered

    private void botonAtrasConsulProfMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAtrasConsulProfMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_botonAtrasConsulProfMouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAtrasConsulProf;
    private javax.swing.JLabel etiquetaConsulProf;
    private javax.swing.JButton jButton1;
    private keeptoo.KGradientPanel panelGradConsulProf;
    private javax.swing.JScrollPane panelScrollTabla;
    private javax.swing.JTable tablaConsulProf;
    // End of variables declaration//GEN-END:variables
}