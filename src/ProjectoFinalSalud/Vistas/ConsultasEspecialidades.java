
package ProjectoFinalSalud.Vistas;

import ProjectoFinalSalud.AccesoDeDatos.EspecialidadData;
import ProjectoFinalSalud.Entidades.Especialidad;
import java.awt.Component;
import java.awt.Cursor;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

public class ConsultasEspecialidades extends javax.swing.JInternalFrame {

    DefaultTableModel modelo = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int colum) {
            return false;
        }
    };
    
    EspecialidadData ed = new EspecialidadData();

    public ConsultasEspecialidades() {
        
        initComponents();
        armarCabecera();
        cargarTabla();
        
        resizeColumnWidth(tablaConsulEsp);
        tablaConsulEsp.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGradConsulEsp = new keeptoo.KGradientPanel();
        etiquetaConsulEsp = new javax.swing.JLabel();
        botonAtrasConsulEsp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaConsulEsp = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(975, 575));

        panelGradConsulEsp.setBackground(new java.awt.Color(255, 255, 255));
        panelGradConsulEsp.setkEndColor(new java.awt.Color(0, 153, 255));
        panelGradConsulEsp.setkStartColor(new java.awt.Color(0, 153, 0));
        panelGradConsulEsp.setkTransparentControls(false);
        panelGradConsulEsp.setPreferredSize(new java.awt.Dimension(975, 575));

        etiquetaConsulEsp.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaConsulEsp.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        etiquetaConsulEsp.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaConsulEsp.setText("Consultar Especialidades ");

        botonAtrasConsulEsp.setBackground(new java.awt.Color(255, 255, 255));
        botonAtrasConsulEsp.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        botonAtrasConsulEsp.setForeground(new java.awt.Color(255, 255, 255));
        botonAtrasConsulEsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesDelProyecto/BotonRetroceso.png"))); // NOI18N
        botonAtrasConsulEsp.setText("Atrás");
        botonAtrasConsulEsp.setBorderPainted(false);
        botonAtrasConsulEsp.setContentAreaFilled(false);
        botonAtrasConsulEsp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonAtrasConsulEsp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonAtrasConsulEspMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonAtrasConsulEspMouseExited(evt);
            }
        });
        botonAtrasConsulEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasConsulEspActionPerformed(evt);
            }
        });

        tablaConsulEsp.setBackground(panelGradConsulEsp.getkStartColor());
        tablaConsulEsp.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tablaConsulEsp.setForeground(new java.awt.Color(255, 255, 255));
        tablaConsulEsp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaConsulEsp);

        javax.swing.GroupLayout panelGradConsulEspLayout = new javax.swing.GroupLayout(panelGradConsulEsp);
        panelGradConsulEsp.setLayout(panelGradConsulEspLayout);
        panelGradConsulEspLayout.setHorizontalGroup(
            panelGradConsulEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradConsulEspLayout.createSequentialGroup()
                .addGap(0, 329, Short.MAX_VALUE)
                .addComponent(etiquetaConsulEsp)
                .addGap(213, 213, 213)
                .addComponent(botonAtrasConsulEsp)
                .addContainerGap())
            .addGroup(panelGradConsulEspLayout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelGradConsulEspLayout.setVerticalGroup(
            panelGradConsulEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGradConsulEspLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGradConsulEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonAtrasConsulEsp)
                    .addComponent(etiquetaConsulEsp))
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(174, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGradConsulEsp, javax.swing.GroupLayout.DEFAULT_SIZE, 959, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelGradConsulEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(0, 0, 975, 575);
    }// </editor-fold>//GEN-END:initComponents

    private void botonAtrasConsulEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasConsulEspActionPerformed
        dispose();
    }//GEN-LAST:event_botonAtrasConsulEspActionPerformed

    private void botonAtrasConsulEspMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAtrasConsulEspMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_botonAtrasConsulEspMouseEntered

    private void botonAtrasConsulEspMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAtrasConsulEspMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_botonAtrasConsulEspMouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAtrasConsulEsp;
    private javax.swing.JLabel etiquetaConsulEsp;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel panelGradConsulEsp;
    private javax.swing.JTable tablaConsulEsp;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera() {
        
        modelo.addColumn("Código");
        modelo.addColumn("Especialidad");
        tablaConsulEsp.setModel(modelo);
    }

    private void cargarTabla() {
        
        ArrayList<Especialidad> listarEspecialidades = ed.listarEspecialidad();
        for (Especialidad esp : listarEspecialidades) {
            modelo.addRow(new Object[]{esp.getIdEspecialidad(), esp.getEspecialidad()});
        }
    }
    
    private void resizeColumnWidth(JTable tablaConsulEsp) {

        TableColumnModel columnModel = tablaConsulEsp.getColumnModel();
        for (int column = 0; column < tablaConsulEsp.getColumnCount(); column++) {
            int width = 150;
            for (int row = 0; row < tablaConsulEsp.getRowCount(); row++) {
                TableCellRenderer renderer = tablaConsulEsp.getCellRenderer(row, column);
                Component comp = tablaConsulEsp.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1, width);
            }
        if (width > 300) {
            width = 300;
        }
        columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
}