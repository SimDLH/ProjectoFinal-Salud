package ProjectoFinalSalud.Vistas;

import ProjectoFinalSalud.AccesoDeDatos.OrdenData;
import ProjectoFinalSalud.Entidades.Orden;
import java.awt.Component;
import java.awt.Cursor;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

public class OrdenesPorAfiliado extends javax.swing.JInternalFrame {

    OrdenData od = new OrdenData();

    DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int colum) {
            return false;
        }
    };

    public OrdenesPorAfiliado() {

        initComponents();
        armarCabecera();
        resizeColumnWidth(tablaOrdenXAfi);
        tablaOrdenXAfi.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);
    }
    
    private String ordenarFecha(Orden orden) {
        
        String stri = "" + orden.getFecha().getDayOfMonth() + "/" + orden.getFecha().getMonthValue() + "/" + orden.getFecha().getYear();
        return stri;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGradOrdenXAfi = new keeptoo.KGradientPanel();
        etiquetaOrdenXAfi = new javax.swing.JLabel();
        etiquetaOrdenXAfiDNI = new javax.swing.JLabel();
        textoOrdenXAfiDNI = new javax.swing.JTextField();
        botonOrdenXAfiBuscar = new javax.swing.JButton();
        botonAtrasOrdenXAfi = new javax.swing.JButton();
        panelScrollTabla = new javax.swing.JScrollPane();
        tablaOrdenXAfi = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(975, 575));

        panelGradOrdenXAfi.setBackground(new java.awt.Color(255, 255, 255));
        panelGradOrdenXAfi.setkEndColor(new java.awt.Color(0, 153, 255));
        panelGradOrdenXAfi.setkStartColor(new java.awt.Color(0, 153, 0));
        panelGradOrdenXAfi.setPreferredSize(new java.awt.Dimension(975, 575));

        etiquetaOrdenXAfi.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaOrdenXAfi.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        etiquetaOrdenXAfi.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaOrdenXAfi.setText("Búsqueda Por Afiliado");

        etiquetaOrdenXAfiDNI.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaOrdenXAfiDNI.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        etiquetaOrdenXAfiDNI.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaOrdenXAfiDNI.setText("DNI Afiliado:");

        textoOrdenXAfiDNI.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        botonOrdenXAfiBuscar.setBackground(new java.awt.Color(255, 255, 255));
        botonOrdenXAfiBuscar.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        botonOrdenXAfiBuscar.setForeground(new java.awt.Color(255, 255, 255));
        botonOrdenXAfiBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesDelProyecto/Boton.png"))); // NOI18N
        botonOrdenXAfiBuscar.setText("Buscar");
        botonOrdenXAfiBuscar.setBorderPainted(false);
        botonOrdenXAfiBuscar.setContentAreaFilled(false);
        botonOrdenXAfiBuscar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonOrdenXAfiBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonOrdenXAfiBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonOrdenXAfiBuscarMouseExited(evt);
            }
        });
        botonOrdenXAfiBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOrdenXAfiBuscarActionPerformed(evt);
            }
        });

        botonAtrasOrdenXAfi.setBackground(new java.awt.Color(255, 255, 255));
        botonAtrasOrdenXAfi.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        botonAtrasOrdenXAfi.setForeground(new java.awt.Color(255, 255, 255));
        botonAtrasOrdenXAfi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesDelProyecto/BotonRetroceso.png"))); // NOI18N
        botonAtrasOrdenXAfi.setText("Atrás");
        botonAtrasOrdenXAfi.setBorderPainted(false);
        botonAtrasOrdenXAfi.setContentAreaFilled(false);
        botonAtrasOrdenXAfi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonAtrasOrdenXAfi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonAtrasOrdenXAfiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonAtrasOrdenXAfiMouseExited(evt);
            }
        });
        botonAtrasOrdenXAfi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasOrdenXAfiActionPerformed(evt);
            }
        });

        tablaOrdenXAfi.setBackground(panelGradOrdenXAfi.getkStartColor());
        tablaOrdenXAfi.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tablaOrdenXAfi.setForeground(new java.awt.Color(255, 255, 255));
        tablaOrdenXAfi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaOrdenXAfi.getTableHeader().setReorderingAllowed(false);
        panelScrollTabla.setViewportView(tablaOrdenXAfi);
        if (tablaOrdenXAfi.getColumnModel().getColumnCount() > 0) {
            tablaOrdenXAfi.getColumnModel().getColumn(0).setResizable(false);
            tablaOrdenXAfi.getColumnModel().getColumn(1).setResizable(false);
            tablaOrdenXAfi.getColumnModel().getColumn(2).setResizable(false);
            tablaOrdenXAfi.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout panelGradOrdenXAfiLayout = new javax.swing.GroupLayout(panelGradOrdenXAfi);
        panelGradOrdenXAfi.setLayout(panelGradOrdenXAfiLayout);
        panelGradOrdenXAfiLayout.setHorizontalGroup(
            panelGradOrdenXAfiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGradOrdenXAfiLayout.createSequentialGroup()
                .addGap(0, 102, Short.MAX_VALUE)
                .addGroup(panelGradOrdenXAfiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradOrdenXAfiLayout.createSequentialGroup()
                        .addComponent(etiquetaOrdenXAfiDNI)
                        .addGap(18, 18, 18)
                        .addGroup(panelGradOrdenXAfiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelGradOrdenXAfiLayout.createSequentialGroup()
                                .addComponent(textoOrdenXAfiDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonOrdenXAfiBuscar))
                            .addGroup(panelGradOrdenXAfiLayout.createSequentialGroup()
                                .addComponent(etiquetaOrdenXAfi)
                                .addGap(236, 236, 236)
                                .addComponent(botonAtrasOrdenXAfi)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradOrdenXAfiLayout.createSequentialGroup()
                        .addComponent(panelScrollTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99))))
        );
        panelGradOrdenXAfiLayout.setVerticalGroup(
            panelGradOrdenXAfiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGradOrdenXAfiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGradOrdenXAfiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonAtrasOrdenXAfi)
                    .addComponent(etiquetaOrdenXAfi))
                .addGap(48, 48, 48)
                .addGroup(panelGradOrdenXAfiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoOrdenXAfiDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaOrdenXAfiDNI)
                    .addComponent(botonOrdenXAfiBuscar))
                .addGap(29, 29, 29)
                .addComponent(panelScrollTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(181, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGradOrdenXAfi, javax.swing.GroupLayout.DEFAULT_SIZE, 959, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGradOrdenXAfi, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
        );

        setBounds(0, 0, 975, 575);
    }// </editor-fold>//GEN-END:initComponents

    private void botonOrdenXAfiBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOrdenXAfiBuscarActionPerformed
        limpiarTabla();
        try {
            int dni = Integer.parseInt(textoOrdenXAfiDNI.getText());
            ArrayList<Orden> listarOrdenes = od.OrdenesPorAfiliado(dni);
            for (Orden orden : listarOrdenes) {
                modelo.addRow(new Object[]{orden.getIdOrden(),
                    orden.getPrestador().getNombre(), ordenarFecha(orden), orden.getFormaPago(), orden.getImporte()});
            }
        } catch (NumberFormatException nf) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero de DNI");
        }

    }//GEN-LAST:event_botonOrdenXAfiBuscarActionPerformed

    private void botonAtrasOrdenXAfiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasOrdenXAfiActionPerformed
        dispose();
    }//GEN-LAST:event_botonAtrasOrdenXAfiActionPerformed

    private void botonAtrasOrdenXAfiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAtrasOrdenXAfiMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_botonAtrasOrdenXAfiMouseEntered

    private void botonAtrasOrdenXAfiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAtrasOrdenXAfiMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_botonAtrasOrdenXAfiMouseExited

    private void botonOrdenXAfiBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonOrdenXAfiBuscarMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_botonOrdenXAfiBuscarMouseEntered

    private void botonOrdenXAfiBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonOrdenXAfiBuscarMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_botonOrdenXAfiBuscarMouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAtrasOrdenXAfi;
    private javax.swing.JButton botonOrdenXAfiBuscar;
    private javax.swing.JLabel etiquetaOrdenXAfi;
    private javax.swing.JLabel etiquetaOrdenXAfiDNI;
    private keeptoo.KGradientPanel panelGradOrdenXAfi;
    private javax.swing.JScrollPane panelScrollTabla;
    private javax.swing.JTable tablaOrdenXAfi;
    private javax.swing.JTextField textoOrdenXAfiDNI;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera() {
        modelo.addColumn("Código");
        modelo.addColumn("Prestador");
        modelo.addColumn("Fecha");
        modelo.addColumn("Pago");
        modelo.addColumn("Importe");
        tablaOrdenXAfi.setModel(modelo);
    }

    private void limpiarTabla() {
        int fila = modelo.getRowCount();
        for (int i = fila - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }
        
    private void resizeColumnWidth(JTable tablaOrdenXAfi) {

    TableColumnModel columnModel = tablaOrdenXAfi.getColumnModel();
        for (int column = 0; column < tablaOrdenXAfi.getColumnCount(); column++) {
            int width = 150;
            for (int row = 0; row < tablaOrdenXAfi.getRowCount(); row++) {
                TableCellRenderer renderer = tablaOrdenXAfi.getCellRenderer(row, column);
                Component comp = tablaOrdenXAfi.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1, width);
            }
        if (width > 300) {
            width = 300;
        }
        columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
}
