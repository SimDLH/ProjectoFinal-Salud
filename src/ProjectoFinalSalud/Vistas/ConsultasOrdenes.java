
package ProjectoFinalSalud.Vistas;

import ProjectoFinalSalud.AccesoDeDatos.OrdenData;
import ProjectoFinalSalud.Entidades.Orden;
import java.util.ArrayList;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

public class ConsultasOrdenes extends javax.swing.JInternalFrame {

    OrdenData od = new OrdenData();

    DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int colum) {
            return false;
        }
    };

    public ConsultasOrdenes() {
        initComponents();
        armarCabecera();
        cargarTabla();
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelConsulConsulOrden = new keeptoo.KGradientPanel();
        etiquetaConsulOrden = new javax.swing.JLabel();
        panelScrollConsulOrden = new javax.swing.JScrollPane();
        tablaConsulOrden = new javax.swing.JTable();
        botonAtrasAfiLista = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(975, 575));

        panelConsulConsulOrden.setkEndColor(new java.awt.Color(0, 153, 255));
        panelConsulConsulOrden.setkStartColor(new java.awt.Color(0, 153, 0));

        etiquetaConsulOrden.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaConsulOrden.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        etiquetaConsulOrden.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaConsulOrden.setText("Consultar Ordenes");

        tablaConsulOrden.setBackground(panelConsulConsulOrden.getkStartColor());
        tablaConsulOrden.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tablaConsulOrden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaConsulOrden.getTableHeader().setReorderingAllowed(false);
        panelScrollConsulOrden.setViewportView(tablaConsulOrden);
        if (tablaConsulOrden.getColumnModel().getColumnCount() > 0) {
            tablaConsulOrden.getColumnModel().getColumn(0).setResizable(false);
            tablaConsulOrden.getColumnModel().getColumn(1).setResizable(false);
            tablaConsulOrden.getColumnModel().getColumn(2).setResizable(false);
            tablaConsulOrden.getColumnModel().getColumn(3).setResizable(false);
        }

        botonAtrasAfiLista.setBackground(new java.awt.Color(255, 255, 255));
        botonAtrasAfiLista.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        botonAtrasAfiLista.setForeground(new java.awt.Color(255, 255, 255));
        botonAtrasAfiLista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesDelProyecto/BotonRetroceso.png"))); // NOI18N
        botonAtrasAfiLista.setText("Atrás");
        botonAtrasAfiLista.setBorderPainted(false);
        botonAtrasAfiLista.setContentAreaFilled(false);
        botonAtrasAfiLista.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonAtrasAfiLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasAfiListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelConsulConsulOrdenLayout = new javax.swing.GroupLayout(panelConsulConsulOrden);
        panelConsulConsulOrden.setLayout(panelConsulConsulOrdenLayout);
        panelConsulConsulOrdenLayout.setHorizontalGroup(
            panelConsulConsulOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConsulConsulOrdenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(etiquetaConsulOrden)
                .addGap(218, 218, 218)
                .addComponent(botonAtrasAfiLista)
                .addContainerGap())
            .addGroup(panelConsulConsulOrdenLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(panelScrollConsulOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );
        panelConsulConsulOrdenLayout.setVerticalGroup(
            panelConsulConsulOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConsulConsulOrdenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConsulConsulOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonAtrasAfiLista)
                    .addComponent(etiquetaConsulOrden))
                .addGap(98, 98, 98)
                .addComponent(panelScrollConsulOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelConsulConsulOrden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelConsulConsulOrden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 975, 575);
    }// </editor-fold>//GEN-END:initComponents

    private void botonAtrasAfiListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasAfiListaActionPerformed
        dispose();
    }//GEN-LAST:event_botonAtrasAfiListaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAtrasAfiLista;
    private javax.swing.JLabel etiquetaConsulOrden;
    private keeptoo.KGradientPanel panelConsulConsulOrden;
    private javax.swing.JScrollPane panelScrollConsulOrden;
    private javax.swing.JTable tablaConsulOrden;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera() {
        modelo.addColumn("Código");
        modelo.addColumn("Afiliado");
        modelo.addColumn("Prestador");
        modelo.addColumn("Fecha");
        modelo.addColumn("Pago");
        modelo.addColumn("Importe");
        tablaConsulOrden.setModel(modelo);
    }

    private void limpiarTabla() {
        int fila = modelo.getRowCount();
        for (int i = fila - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    private void cargarTabla() {
        ArrayList<Orden> listarOrdenes = od.ListarOrdenes();
        for (Orden orden : listarOrdenes) {
            modelo.addRow(new Object[]{orden.getIdOrden(), orden.getAfiliado().getNombre(),
                orden.getPrestador().getNombre(),
                orden.getFecha(), orden.getFormaPago(), orden.getImporte()});
        }
    }
}
